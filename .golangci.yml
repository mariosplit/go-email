# golangci-lint configuration
# https://golangci-lint.run/usage/configuration/

run:
  # Timeout for analysis
  timeout: 5m
  
  # Exit code when at least one issue was found
  issues-exit-code: 1
  
  # Include test files
  tests: true
  
  # Skip directories
  skip-dirs:
    - vendor
    - .git
    - examples

linters:
  enable:
    - gofmt
    - goimports
    - golint
    - govet
    - errcheck
    - staticcheck
    - unused
    - gosimple
    - structcheck
    - varcheck
    - ineffassign
    - deadcode
    - typecheck
    - gosec
    - unconvert
    - dupl
    - goconst
    - gocyclo
    - gocognit
    - asciicheck
    - gofumpt
    - prealloc
    - exportloopref
    - gocritic
    - revive
    - misspell
    - unparam
    - dogsled
    - nakedret
    - stylecheck
    - whitespace
    - nestif

linters-settings:
  gofmt:
    simplify: true
  
  goimports:
    local-prefixes: github.com/go-email/go-email
  
  golint:
    min-confidence: 0.8
  
  govet:
    check-shadowing: true
  
  gocyclo:
    min-complexity: 15
  
  dupl:
    threshold: 100
  
  goconst:
    min-len: 2
    min-occurrences: 2
  
  misspell:
    locale: US
  
  unparam:
    check-exported: false
  
  nakedret:
    max-func-lines: 30
  
  prealloc:
    simple: true
    range-loops: true
    for-loops: false
  
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc

issues:
  # Maximum issues count per one linter
  max-issues-per-linter: 50
  
  # Maximum count of issues with the same text
  max-same-issues: 3
  
  # Show only new issues
  new: false
  
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
    
    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "
  
  # Independently from option `exclude` we use default exclude patterns
  exclude-use-default: false
  
  # Fix found issues (if it's supported by the linter)
  fix: false

output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate
  format: colored-line-number
  
  # Print lines of code with issue
  print-issued-lines: true
  
  # Print linter name in the end of issue text
  print-linter-name: true
  
  # Make issues output unique by line
  uniq-by-line: true
